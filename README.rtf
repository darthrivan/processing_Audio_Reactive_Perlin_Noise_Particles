Copyright (C) 2015  DarthRivan
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".


Audio Reactive Perlin Noise Particles    by DarthRivan

This is an audio reactive project done with Processing where Perlin Noise driven particles are generated depending on the sound of the L/R channels of the audio input (microphone).

Particle movement was extracted from another project, Daan van Hasselt’s “Perlin Noise Particle System” which can be found here http://www.openprocessing.org/sketch/10475

I quote from the sketch description:

“Using Perlin noise to determine speed and direction of particles. Time is the third dimension of the noise() function, so if you keep your mouse at the same point the direction of the particles will always be different. The particles leave a trace, and the result is a bit like ink in water.”

Tested under Hackintosh 10.9 and Processing 2.0 using (as you can see in the code, Line In audio (microphone).

I’ve tested the code using music by ASound Project (http://asound.me/) and Ad·ver·sary (http://ad-ver-sary.com/) as well as some songs in the Emerging Organisms compilations by Tympanik Audio.

To modify some behaviours you can use:

**Variables (found in Globals.cpp):

MAX_PARTICLES: Maximum number of Particles

precisionL and precisionR: Precision for both Channels. For R Channel it will ignore values between precisionR and -precisionR, and the same for L Channel. Precision value >= 1.5 is highly imposible to feel anything
    
LifeTime: Lifetime for every Particle in the System
    
    
ParticleAlpha: Particle’s Transparency where 0 is fully transparent and 255 is fully opaque
    
ParSpeedRedFactor: Particle’s Speed reducing Factor from 1.1 to whatever to go from more speed to less speed.

**Controls:

R key: resets the particles zone.

L key: enables/disables the sound lines at both edges of the screen.

This, openFrameworks version and other sketches and projects can be found on my gitHub ( https://github.com/darthrivan ).
